from Asset import Asset


class Vulnerability(Asset):

    # Constructor
    def __init__(self, id: str, name: str):
        super().__init__(id, name)
        self.description = ''
        self.cvss_score = ''
        self.access_vector = ''
        self.access_complexity = ''
        self.authentication = ''
        self.user_interaction_required = ''
        self.severity = ''
        self.confidentiality_impact = ''
        self.integrity_impact = ''
        self.availability_impact = ''
        self.cvss_exploitability_score = ''
        self.cvss_impact_score = ''
        self.date = ''
        self.obtain_all_privilege = ''
        self.obtain_user_privilege = ''
        self.obtain_other_privilege = ''

    # Definition of Getters and Setters
    @property
    def id(self) -> str:
        return self._id

    @id.setter
    def id(self, id: str):
        self._id = id

    @property
    def name(self) -> str:
        return self._name

    @name.setter
    def name(self, name: str):
        self._name = name

    @property
    def description(self) -> str:
        return self._description

    @description.setter
    def description(self, description: str):
        self._description = description

    @property
    def cvss_score(self) -> float:
        return self._cvss_score

    @cvss_score.setter
    def cvss_score(self, cvss_score: float):
        self._cvss_score = cvss_score

    @property
    def access_vector(self) -> str:
        return self._access_vector

    @access_vector.setter
    def access_vector(self, access_vector: str):
        self._access_vector = access_vector

    @property
    def access_complexity(self) -> str:
        return self._access_complexity

    @access_complexity.setter
    def access_complexity(self, access_complexity: str):
        self._access_complexity = access_complexity

    @property
    def authentication(self) -> str:
        return self._authentication

    @authentication.setter
    def authentication(self, authentication: str):
        self._authentication = authentication

    @property
    def user_interaction_required(self) -> str:
        return self._user_interaction_required

    @user_interaction_required.setter
    def user_interaction_required(self, user_interaction_required: str):
        self._user_interaction_required = user_interaction_required

    @property
    def severity(self) -> str:
        return self._severity

    @severity.setter
    def severity(self, severity: str):
        self._severity = severity

    @property
    def confidentiality_impact(self) -> str:
        return self._confidentiality_impact

    @confidentiality_impact.setter
    def confidentiality_impact(self, confidentiality_impact: str):
        self._confidentiality_impact = confidentiality_impact

    @property
    def integrity_impact(self) -> str:
        return self._integrity_impact

    @integrity_impact.setter
    def integrity_impact(self, integrity_impact: str):
        self._integrity_impact = integrity_impact

    @property
    def availability_impact(self) -> str:
        return self._availability_impact

    @availability_impact.setter
    def availability_impact(self, availability_impact: str):
        self._availability_impact = availability_impact

    @property
    def cvss_exploitability_score(self) -> float:
        return self._cvss_exploitability_score

    @cvss_exploitability_score.setter
    def cvss_exploitability_score(self, cvss_exploitability_score: float):
        self._cvss_exploitability_score = cvss_exploitability_score

    @property
    def cvss_impact_score(self) -> float:
        return self._cvss_impact_score

    @cvss_impact_score.setter
    def cvss_impact_score(self, cvss_impact_score: float):
        self._cvss_impact_score = cvss_impact_score

    @property
    def date(self) -> str:
        return self._date

    @date.setter
    def date(self, date: str):
        self._date = date

    @property
    def obtain_all_privilege(self) -> str:
        return self._obtain_all_privilege

    @obtain_all_privilege.setter
    def obtain_all_privilege(self, obtain_all_privilege: str):
        self._obtain_all_privilege = obtain_all_privilege

    @property
    def obtain_user_privilege(self) -> str:
        return self._obtain_user_privilege

    @obtain_user_privilege.setter
    def obtain_user_privilege(self, obtain_user_privilege: str):
        self._obtain_user_privilege = obtain_user_privilege

    @property
    def obtain_other_privilege(self) -> str:
        return self._obtain_other_privilege

    @obtain_other_privilege.setter
    def obtain_other_privilege(self, obtain_other_privilege: str):
        self._obtain_other_privilege = obtain_other_privilege






